# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Proyecto.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import cv2
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1024, 828)
        
        self.capture = cv2.VideoCapture(0)
        self.dimensions = self.capture.read()[1].shape[1::-1]
        
        # Define the codec and create VideoWriter object
        self.fourcc = cv2.VideoWriter_fourcc(*'XVID')
        
        # count variable 
        self.count = 0
        
        # start flag 
        self.start = False
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.playButton = QtWidgets.QPushButton(self.centralwidget)
        self.playButton.setGeometry(QtCore.QRect(200, 570, 171, 71))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("play.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.playButton.setIcon(icon)
        self.playButton.setIconSize(QtCore.QSize(32, 32))
        self.playButton.setObjectName("playButton")
        self.playButton.clicked.connect(self.clickedPlay)
        
        self.stopButton = QtWidgets.QPushButton(self.centralwidget)
        self.stopButton.setGeometry(QtCore.QRect(390, 570, 121, 71))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("stop.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.stopButton.setIcon(icon1)
        self.stopButton.setIconSize(QtCore.QSize(32, 32))
        self.stopButton.setObjectName("stopButton")
        self.stopButton.clicked.connect(self.clickedStop)
        self.stopButton.setEnabled(False)
        
        scene = QtWidgets.QGraphicsScene(self.centralwidget)
        pixmap = QtGui.QPixmap(*self.dimensions)
        self.pixmapItem = scene.addPixmap(pixmap)
        
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(40, 30, 951, 481))
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView.setScene(scene)
        
        self.timer = QtCore.QTimer(self.centralwidget)
        self.timer.setInterval(int(1000/30))
        self.timer.timeout.connect(self.get_frame)
        
        # creating a timer object 
        self.timerDuracion = QtCore.QTimer(self.centralwidget) 
  
        # adding action to timer 
        self.timerDuracion.timeout.connect(self.showTime) 
  
        # update the timer every tenth second 
        self.timerDuracion.start(100)
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(370, 740, 121, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(360, 680, 131, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(360, 710, 131, 16))
        self.label_3.setObjectName("label_3")
        self.conMascarilla = QtWidgets.QLabel(self.centralwidget)
        self.conMascarilla.setGeometry(QtCore.QRect(510, 680, 47, 13))
        self.conMascarilla.setText("0")
        self.conMascarilla.setObjectName("conMascarilla")
        self.sinMascarilla = QtWidgets.QLabel(self.centralwidget)
        self.sinMascarilla.setGeometry(QtCore.QRect(510, 710, 47, 13))
        self.sinMascarilla.setText("0")
        self.sinMascarilla.setObjectName("sinMascarilla")
        self.total = QtWidgets.QLabel(self.centralwidget)
        self.total.setGeometry(QtCore.QRect(510, 740, 47, 13))
        self.total.setText("0")
        self.total.setObjectName("total")
        
        self.reiniciarButton = QtWidgets.QPushButton(self.centralwidget)
        self.reiniciarButton.setGeometry(QtCore.QRect(530, 570, 121, 71))
        self.reiniciarButton.setEnabled(False)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("reiniciar.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.reiniciarButton.setIcon(icon2)
        self.reiniciarButton.setIconSize(QtCore.QSize(32, 32))
        self.reiniciarButton.setObjectName("reiniciarButton")
        self.reiniciarButton.clicked.connect(self.clickedReiniciar)
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1024, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Proyecto Text Mining and Image Recognition"))
        self.playButton.setText(_translate("MainWindow", "Play"))
        self.stopButton.setText(_translate("MainWindow", "Stop"))
        self.label.setText(_translate("MainWindow", "Duraci√≥n total del video"))
        self.label_2.setText(_translate("MainWindow", "Total tiempo con mascarilla"))
        self.label_3.setText(_translate("MainWindow", "Total tiempo sin mascarilla"))
        self.reiniciarButton.setText(_translate("MainWindow", "Reiniciar"))
        
    def clickedPlay(self):
        self.stopButton.setEnabled(True)
        self.playButton.setEnabled(False)
        self.out = cv2.VideoWriter('output.avi',self.fourcc, 20.0, (640,480))
        self.timer.start()
        # making flag true 
        self.start = True
  
        # count = 0 
        #if self.count == 0: 
        #    self.start = False
        
    def clickedStop(self):
        self.stopButton.setEnabled(False)
        self.reiniciarButton.setEnabled(True)
        self.out.release()
        self.timer.stop()
        # making flag false 
        self.start = False
        
    def clickedReiniciar(self):
        self.reiniciarButton.setEnabled(False)
        self.playButton.setEnabled(True)
        scene = QtWidgets.QGraphicsScene(self.centralwidget)
        pixmap = QtGui.QPixmap(*self.dimensions)
        self.pixmapItem = scene.addPixmap(pixmap)
        self.graphicsView.setScene(scene)
        
         # making flag false 
        self.start = False
  
        # setting count value to 0 
        self.count = 0
  
        # setting label text 
        self.total.setText("0")
        self.conMascarilla.setText("0")
        self.sinMascarilla.setText("0")
        
    
    def get_frame(self):
        _, frame = self.capture.read()
        self.out.write(frame)
        image = QtGui.QImage(frame, *self.dimensions, QtGui.QImage.Format_RGB888).rgbSwapped()
        pixmap = QtGui.QPixmap.fromImage(image)
        self.pixmapItem.setPixmap(pixmap)
            
    # method called by timer 
    def showTime(self): 
  
        # checking if flag is true 
        if self.start: 
            # incrementing the counter 
            self.count += 1
  
            # timer is completed 
            if self.count == 0: 
  
                # making flag false 
                self.start = False
  
                # setting text to the label 
                self.total.setText("Completed !!!! ") 
  
        if self.start: 
            # getting text from count 
            text = str(self.count / 10) + " s"
  
            # showing text 
            self.total.setText(text) 

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
